{
  "address": "0x29faD8AA3C3fcd7CcA9D7D7F66628786D1D1DED5",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "decimals",
          "type": "uint8"
        }
      ],
      "name": "calculateFees",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "userAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "protocolFee",
              "type": "uint256"
            }
          ],
          "internalType": "struct LibFeeCalculatorV1.FeeBreakdown",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    }
  ],
  "transactionHash": "0x8ab02fd7a7efd1daf02155678ec10482f281901979627db4a5edd925389f1e20",
  "receipt": {
    "to": "0x0000000000000000000000000000000000000000",
    "from": "0x8965fc7537747Ff60FE141298Bc76563DF976030",
    "contractAddress": "0x29faD8AA3C3fcd7CcA9D7D7F66628786D1D1DED5",
    "transactionIndex": 0,
    "gasUsed": "243283",
    "logsBloom": "0x
    "blockHash": "0xa899e8d1b2d2ef3a81e13e37837c8625054562bc5e3eb3a085dd0deadec4c10c",
    "transactionHash": "0x8ab02fd7a7efd1daf02155678ec10482f281901979627db4a5edd925389f1e20",
    "logs": [],
    "blockNumber": 5167149,
    "cumulativeGasUsed": "243283",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "d7aa400711a176a4a7277d21ed0ecd0b",
  "metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"}],\"name\":\"calculateFees\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"userAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"protocolFee\",\"type\":\"uint256\"}],\"internalType\":\"struct LibFeeCalculatorV1.FeeBreakdown\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/lib/LibFeeCalculatorV1.sol\":\"LibFeeCalculatorV1\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/lib/LibFeeCalculatorV1.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\npragma solidity 0.8.24;\\n\\nlibrary LibFeeCalculatorV1 {\\n    \\n    uint256 constant FEE_DENOMINATOR = 10000; // To represent percentages (100 = 1%)\\n    \\n    struct FeeBreakdown {\\n        uint256 userAmount;\\n        uint256 protocolFee;\\n    }\\n\\n    // Calculate fee distribution with dynamic decimal support\\n    function calculateFees(uint256 amount, uint8 decimals) public pure returns (FeeBreakdown memory) {\\n        require(amount > 0, \\\"Amount must be greater than zero\\\");\\n        require(decimals >= 1 && decimals <= 18, \\\"Unsupported token decimals\\\");\\n\\n        // Calculate 1% fee based on decimals\\n        uint256 protocolFee = (amount * 100) / FEE_DENOMINATOR; // 1% of the amount\\n\\n        // If protocolFee is zero, set it to a minimum value (1 unit in the smallest unit)\\n        if (protocolFee == 0) {\\n            protocolFee = 10 ** (18 - decimals); // Ensure at least 1 unit of fee\\n        }\\n\\n        // Calculate user amount after fee\\n        uint256 userAmount = amount - protocolFee;\\n\\n        return FeeBreakdown(\\n            userAmount,\\n            protocolFee\\n        );\\n    }\\n}\",\"keccak256\":\"0x6679c85a8e7efec773d14a596912924400963ffd5d384e2d29da2874b7f289d9\",\"license\":\"BUSL-1.1\"}},\"version\":1}",
  "bytecode": "0x61036e610035600b8282823980515f1a60731461002957634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe7300000000000000000000000000000000000000003014608060405260043610610034575f3560e01c8063dc03d93214610038575b5f80fd5b61004b61004636600461019a565b61006a565b6040805182518152602092830151928101929092520160405180910390f35b604080518082019091525f80825260208201525f83116100d15760405162461bcd60e51b815260206004820181905260248201527f416d6f756e74206d7573742062652067726561746572207468616e207a65726f60448201526064015b60405180910390fd5b60018260ff16101580156100e9575060128260ff1611155b6101355760405162461bcd60e51b815260206004820152601a60248201527f556e737570706f7274656420746f6b656e20646563696d616c7300000000000060448201526064016100c8565b5f6127106101448560646101e1565b61014e91906101f8565b9050805f0361017057610162836012610217565b61016d90600a610310565b90505b5f61017b8286610325565b6040805180820190915290815260208101929092525090505b92915050565b5f80604083850312156101ab575f80fd5b82359150602083013560ff811681146101c2575f80fd5b809150509250929050565b634e487b7160e01b5f52601160045260245ffd5b8082028115828204841417610194576101946101cd565b5f8261021257634e487b7160e01b5f52601260045260245ffd5b500490565b60ff8281168282160390811115610194576101946101cd565b600181815b8085111561026a57815f1904821115610250576102506101cd565b8085161561025d57918102915b93841c9390800290610235565b509250929050565b5f8261028057506001610194565b8161028c57505f610194565b81600181146102a257600281146102ac576102c8565b6001915050610194565b60ff8411156102bd576102bd6101cd565b50506001821b610194565b5060208310610133831016604e8410600b84101617156102eb575081810a610194565b6102f58383610230565b805f1904821115610308576103086101cd565b029392505050565b5f61031e60ff841683610272565b9392505050565b81810381811115610194576101946101cd56fea26469706673582212207c58cdd0c69d54c644bd8a45ee6ee4c5196e6d18a0f1c038b721f8aaf7a15f0864736f6c63430008180033",
  "deployedBytecode": "0x7300000000000000000000000000000000000000003014608060405260043610610034575f3560e01c8063dc03d93214610038575b5f80fd5b61004b61004636600461019a565b61006a565b6040805182518152602092830151928101929092520160405180910390f35b604080518082019091525f80825260208201525f83116100d15760405162461bcd60e51b815260206004820181905260248201527f416d6f756e74206d7573742062652067726561746572207468616e207a65726f60448201526064015b60405180910390fd5b60018260ff16101580156100e9575060128260ff1611155b6101355760405162461bcd60e51b815260206004820152601a60248201527f556e737570706f7274656420746f6b656e20646563696d616c7300000000000060448201526064016100c8565b5f6127106101448560646101e1565b61014e91906101f8565b9050805f0361017057610162836012610217565b61016d90600a610310565b90505b5f61017b8286610325565b6040805180820190915290815260208101929092525090505b92915050565b5f80604083850312156101ab575f80fd5b82359150602083013560ff811681146101c2575f80fd5b809150509250929050565b634e487b7160e01b5f52601160045260245ffd5b8082028115828204841417610194576101946101cd565b5f8261021257634e487b7160e01b5f52601260045260245ffd5b500490565b60ff8281168282160390811115610194576101946101cd565b600181815b8085111561026a57815f1904821115610250576102506101cd565b8085161561025d57918102915b93841c9390800290610235565b509250929050565b5f8261028057506001610194565b8161028c57505f610194565b81600181146102a257600281146102ac576102c8565b6001915050610194565b60ff8411156102bd576102bd6101cd565b50506001821b610194565b5060208310610133831016604e8410600b84101617156102eb575081810a610194565b6102f58383610230565b805f1904821115610308576103086101cd565b029392505050565b5f61031e60ff841683610272565b9392505050565b81810381811115610194576101946101cd56fea26469706673582212207c58cdd0c69d54c644bd8a45ee6ee4c5196e6d18a0f1c038b721f8aaf7a15f0864736f6c63430008180033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": null
  }
}
